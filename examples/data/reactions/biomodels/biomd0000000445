cL_m_trscr:  ->(def*(L*cP*q1 + g1**a*n1/(g1**a + (cNI + cP7 + cP9 + cT)**a))) cL_m
cL_m_degr: cL_m ->(def*(L*(m1 - m2) + m2)) 
cL_trsl:  ->(cL_m*def*(L*p1 + p2)) cL
cL_degr: cL ->((cL*m3 + cL**c*p3/(cL**c + g3**c))/cL) 
cL_modif:  ->(cL**c*p3/(cL**c + g3**c)) cLm
cLm_degr: cLm ->(m4) 
cP_trsl:  ->(def*p7*(-L + 1.0)*(-cP + 1.0)) cP
cP_degr: cP ->(L*def*m11) 
cP9_m_trscr:  ->(def*parameter_2**parameter_7*(L*cP*q3 + g8*(cL**e*n7/(cL**e + g9**e) + n4)/(cEC + g8))/(cT**parameter_7 + parameter_2**parameter_7)) cP9_m
cP9_m_degr: cP9_m ->(m12) 
cP9_trsl:  ->(cP9_m*p8) cP9
cP9_degr: cP9 ->(def*(m13 + m22*(-L + 1.0))) 
cP7_m_trscr:  ->(parameter_6**parameter_7*(cP9**f*n9/(cP9**f + g11**f) + n8*(cL + cLm)**e/(g10**e + (cL + cLm)**e))/(cT**parameter_7 + parameter_6**parameter_7)) cP7_m
cP7_m_degr: cP7_m ->(m14) 
cP7_trsl:  ->(cP7_m*p9) cP7
cP7_degr: cP7 ->(def*(m15 + m23*(-L + 1.0))) 
cNI_m_trscr:  ->(parameter_12**parameter_7*(cLm**e*n10/(cLm**e + g12**e) + cP7**b*n11/(cP7**b + g13**b))/(cT**parameter_7 + parameter_12**parameter_7)) cNI_m
cNI_m_degr: cNI_m ->(m16) 
cNI_trsl:  ->(cNI_m*p10) cNI
cNI_degr: cNI ->(def*(m17 + m24*(-L + 1.0))) 
cT_m_trscr:  ->(g4*n2/((cEC + g4)*((cL/(g5*((species_3/parameter_14)**parameter_11 + 1.0)))**e + 1.0))) cT_m
cT_m_degr: cT_m ->(m5) 
cT_trsl:  ->(cT_m*p4) cT
cT_degr: cT ->(def*(cT*m8 + cT*(cZG + cZTL*p5)*(m6 + m7*(-L + 1.0)))/cT) 
cE4_m_trscr:  ->(g6**e*parameter_4*parameter_5**parameter_7*parameter_8/((cEC + parameter_4)*(cL**e + g6**e)*(cT**parameter_7 + parameter_5**parameter_7))) cE4_m
cE4_m_degr: cE4_m ->(m34) 
cE4_trsl:  ->(cE4_m*p23) cE4
cE4_degr: cE4 ->((-cE3n*cE4*p21*p25/(cCOP1d*m9 + cCOP1n*m10 + cLUX*p26 + p21) + cE3n*cE4*p25 + cE4*m35)/cE4) 
cE3_m_trscr:  ->(g16**e*n3/(cL**e + g16**e)) cE3_m
cE3_m_degr: cE3_m ->(m26) 
cE3_trsl:  ->(cE3_m*p16) cE3
cE3_degr: cE3 ->(cCOP1c*m9) 
cE3n_import: cE3 ->((cE3*p19 - cE3n*p20)/cE3) cE3n
cE3n_degr: cE3n ->((cCOP1d*cE3n*m9 + cCOP1n*cE3n*m10 - cE3n*cE4*p21*p25/(cCOP1d*m9 + cCOP1n*m10 + cLUX*p26 + p21) + cE3n*cE4*p25 + cE3n*cG*p17*p28/(cE3n*p17 + m19 + p29))/cE3n) 
cLUX_m_trscr:  ->(g2*g6**e*n13*parameter_3**parameter_7/((cEC + g2)*(cL**e + g6**e)*(cT**parameter_7 + parameter_3**parameter_7))) cLUX_m
cLUX_m_degr: cLUX_m ->(m34) 
cLUX_trsl:  ->(cLUX_m*p27) cLUX
cLUX_degr: cLUX ->((cE3n*cE4*cLUX*p25*p26/(cCOP1d*m9 + cCOP1n*m10 + cLUX*p26 + p21) + cLUX*m36)/cLUX) 
cCOP1c_trsl:  ->(n5) cCOP1c
cCOP1c_degr: cCOP1c ->(def*m27*(L*p15 + 1.0)) 
cCOP1n_import: cCOP1c ->(p6) cCOP1n
cCOP1n_degr: cCOP1n ->(def*m27*(L*p15 + 1.0)) 
cCOP1d_activ: cCOP1n ->(def*(L*cCOP1n*cP*n6 + cCOP1n*n14)/cCOP1n) cCOP1d
cCOP1d_degr: cCOP1d ->(def*m31*(m33*(-L + 1.0) + 1.0)) 
cG_m_trscr:  ->(def*parameter_1**parameter_7*(L*cP*q2 + g14*g15**e*n12/((cEC + g14)*(cL**e + g15**e)))/(cT**parameter_7 + parameter_1**parameter_7)) cG_m
cG_m_degr: cG_m ->(m18) 
cG_trsl:  ->(cG_m*p11) cG
cG_degr: cG ->((cG*m19 - cG*p28*p29/(cE3n*p17 + m19 + p29) + cG*p28)/cG) 
cG_cZTL_assoc: cG + cZTL ->(L*def*(cG*cZTL*p12 + cZG*p13)/(cG*cZTL)) cZG
cG_cZTL_assoc_rev: cZG ->(1.0*def*p13) cG + cZTL
cZTL_trsl:  ->(p14) cZTL
cZTL_degr: cZTL ->(m20) 
cZG_degr: cZG ->(m21) 
cG_cE3_assoc: cE3 + cG ->(p17) cEG
cEG_degr: cEG ->((cCOP1c*cEG*m10 + cEG*p18 - parameter_26*(cE3n*cG*p17*p28/(cE3n*p17 + m19 + p29) + cEG*p18)/(cCOP1d*m9 + cCOP1n*m10 + parameter_26))/cEG) 
cEC_form:  ->(cE3n*cE4*cLUX*p25*p26/(cCOP1d*m9 + cCOP1n*m10 + cLUX*p26 + p21)) cEC
cEC_degr: cEC ->(def*(cCOP1d*cEC*m9 + cCOP1n*cEC*m10 + cEC*m32*(L*p24*(cG*p28/(cE3n*p17 + m19 + p29) + (cE3n*cG*p17*p28/(cE3n*p17 + m19 + p29) + cEG*p18)/(cCOP1d*m9 + cCOP1n*m10 + parameter_26))**d/(g7**d + (cG*p28/(cE3n*p17 + m19 + p29) + (cE3n*cG*p17*p28/(cE3n*p17 + m19 + p29) + cEG*p18)/(cCOP1d*m9 + cCOP1n*m10 + parameter_26))**d) + 1.0))/cEC) 
reaction_1:  ->(cL**e*default*parameter_13**parameter_7*parameter_24/(def*(cL**e + parameter_17**e)*(cT**parameter_7 + parameter_13**parameter_7))) species_1
reaction_2: species_1 ->(default*m37/def) 
reaction_3:  ->(default*parameter_16**parameter_9*parameter_28/(def*(parameter_16**parameter_9 + (0.5*parameter_18 + 0.5*parameter_29 + 0.5*species_1 - 0.5*(-4.0*parameter_29*species_1 + (parameter_18 + parameter_29 + species_1)**2.0)**0.5)**parameter_9))) species_2
reaction_4: species_2 ->(default*parameter_20/def) 
reaction_5: species_3 ->(default*m30*species_2/def) 
reaction_6:  ->(default*parameter_27/def) species_3
reaction_7:  ->(default*parameter_15**parameter_10*(-species_4 + 1.0)*(L*parameter_21 + parameter_25)/(def*(parameter_15**parameter_10 + species_3**parameter_10))) species_4
reaction_8: species_4 ->(default*m29/def) 
