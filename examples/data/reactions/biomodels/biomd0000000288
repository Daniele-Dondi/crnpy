sumrc1ODE:  ->(2*c2*kminusx + kt) sumrc1
sumrc1ODE_rev: sumrc1 ->((2*c1**2*kxR0 + kt*sumrc1)/sumrc1) 
c2ODE:  ->(c1**2*kxR0) c2
c2ODE_rev: c2 ->((c2*ke + c2*kminusx)/c2) 
m3PIODE:  ->(ePI3K*k3PI) m3PI
m3PIODE_rev: m3PI ->(k3PI) 
mRasODE:  ->(Gamma*eGEF*kRas + eGEF*kRas) mRas
mRasODE_rev: mRas ->((Gamma*eGEF*kRas*mRas + kRas*mRas)/mRas) 
x1ODE:  ->((KMx11*KMx12*kdx1*mRas + KMx11*kdx1*mRas*yp + KMx12*kdx1*mRas*y)/(KMx11*KMx12 + KMx11*yp + KMx12*y)) x1
x1ODE_rev: x1 ->(KMx11*KMx12*kdx1/(KMx11*KMx12 + KMx11*yp + KMx12*y)) 
x2ODE:  ->((KMx21*KMx22*Kx2*kdx2*m3PI + KMx21*KMx22*kdx2*m3PI + KMx21*Kx2*kdx2*m3PI*yp + KMx21*kdx2*m3PI*yp + KMx22*Kx2*kdx2*m3PI*y + KMx22*kdx2*m3PI*y)/((Kx2*m3PI + 1)*(KMx21*KMx22 + KMx21*yp + KMx22*y))) x2
x2ODE_rev: x2 ->((KMx21*KMx22*Kx2*kdx2*m3PI*x2 + KMx21*KMx22*kdx2*x2)/(x2*(Kx2*m3PI + 1)*(KMx21*KMx22 + KMx21*yp + KMx22*y))) 
yODE:  ->((KMx11*KMx12*KMx21*KMx22*KMyph1*KMyph2*VmaxOVERKMyph1*yp + KMx11*KMx12*KMx21*KMyph1*KMyph2*VmaxOVERKMyph1*yp**2 + KMx11*KMx12*KMx22*KMyph1*KMyph2*VmaxOVERKMyph1*y*yp + KMx11*KMx21*KMx22*KMyph1*KMyph2*VmaxOVERKMyph1*yp**2 + KMx11*KMx21*KMyph1*KMyph2*VmaxOVERKMyph1*yp**3 + KMx11*KMx22*KMyph1*KMyph2*VmaxOVERKMyph1*y*yp**2 + KMx12*KMx21*KMx22*KMyph1*KMyph2*VmaxOVERKMyph1*y*yp + KMx12*KMx21*KMyph1*KMyph2*VmaxOVERKMyph1*y*yp**2 + KMx12*KMx22*KMyph1*KMyph2*VmaxOVERKMyph1*y**2*yp)/((KMx11*KMx12 + KMx11*yp + KMx12*y)*(KMx21*KMx22 + KMx21*yp + KMx22*y)*(KMyph1*KMyph2 + KMyph1*ypp + KMyph2*yp))) y
yODE_rev: y ->((KMx11*KMx12*KMx21*KMx22*KMyph1*KMyph2*VmaxOVERKMx11*x1*y + KMx11*KMx12*KMx21*KMx22*KMyph1*KMyph2*VmaxOVERKMx21*x2*y + KMx11*KMx12*KMx21*KMx22*KMyph1*VmaxOVERKMx11*x1*y*ypp + KMx11*KMx12*KMx21*KMx22*KMyph1*VmaxOVERKMx21*x2*y*ypp + KMx11*KMx12*KMx21*KMx22*KMyph2*VmaxOVERKMx11*x1*y*yp + KMx11*KMx12*KMx21*KMx22*KMyph2*VmaxOVERKMx21*x2*y*yp + KMx11*KMx12*KMx21*KMyph1*KMyph2*VmaxOVERKMx11*x1*y*yp + KMx11*KMx12*KMx21*KMyph1*VmaxOVERKMx11*x1*y*yp*ypp + KMx11*KMx12*KMx21*KMyph2*VmaxOVERKMx11*x1*y*yp**2 + KMx11*KMx12*KMx22*KMyph1*KMyph2*VmaxOVERKMx11*x1*y**2 + KMx11*KMx12*KMx22*KMyph1*VmaxOVERKMx11*x1*y**2*ypp + KMx11*KMx12*KMx22*KMyph2*VmaxOVERKMx11*x1*y**2*yp + KMx11*KMx21*KMx22*KMyph1*KMyph2*VmaxOVERKMx21*x2*y*yp + KMx11*KMx21*KMx22*KMyph1*VmaxOVERKMx21*x2*y*yp*ypp + KMx11*KMx21*KMx22*KMyph2*VmaxOVERKMx21*x2*y*yp**2 + KMx12*KMx21*KMx22*KMyph1*KMyph2*VmaxOVERKMx21*x2*y**2 + KMx12*KMx21*KMx22*KMyph1*VmaxOVERKMx21*x2*y**2*ypp + KMx12*KMx21*KMx22*KMyph2*VmaxOVERKMx21*x2*y**2*yp)/(y*(KMx11*KMx12 + KMx11*yp + KMx12*y)*(KMx21*KMx22 + KMx21*yp + KMx22*y)*(KMyph1*KMyph2 + KMyph1*ypp + KMyph2*yp))) 
yppODE:  ->((KMx11*KMx12*KMx21*KMx22*KMy1*KMy2*KMyph1*KMyph2*VmaxOVERKMx12*x1*yp + KMx11*KMx12*KMx21*KMx22*KMy1*KMy2*KMyph1*KMyph2*VmaxOVERKMx22*x2*yp + KMx11*KMx12*KMx21*KMx22*KMy1*KMy2*KMyph1*VmaxOVERKMx12*x1*yp*ypp + KMx11*KMx12*KMx21*KMx22*KMy1*KMy2*KMyph1*VmaxOVERKMx22*x2*yp*ypp + KMx11*KMx12*KMx21*KMx22*KMy1*KMy2*KMyph2*VmaxOVERKMx12*x1*yp**2 + KMx11*KMx12*KMx21*KMx22*KMy1*KMy2*KMyph2*VmaxOVERKMx22*x2*yp**2 + KMx11*KMx12*KMx21*KMx22*KMy1*KMyph1*KMyph2*VmaxOVERKMx12*x1*yp*zp + KMx11*KMx12*KMx21*KMx22*KMy1*KMyph1*KMyph2*VmaxOVERKMx22*x2*yp*zp + KMx11*KMx12*KMx21*KMx22*KMy1*KMyph2*VmaxOVERKMx12*x1*yp**2*zp + KMx11*KMx12*KMx21*KMx22*KMy1*KMyph2*VmaxOVERKMx22*x2*yp**2*zp + KMx11*KMx12*KMx21*KMx22*KMy2*KMyph1*KMyph2*VmaxOVERKMx12*x1*yp*z + KMx11*KMx12*KMx21*KMx22*KMy2*KMyph1*KMyph2*VmaxOVERKMx22*x2*yp*z + KMx11*KMx12*KMx21*KMx22*KMy2*KMyph2*VmaxOVERKMx12*x1*yp**2*z + KMx11*KMx12*KMx21*KMx22*KMy2*KMyph2*VmaxOVERKMx22*x2*yp**2*z + KMx11*KMx12*KMx21*KMy1*KMy2*KMyph1*KMyph2*VmaxOVERKMx12*x1*yp**2 + KMx11*KMx12*KMx21*KMy1*KMy2*KMyph1*VmaxOVERKMx12*x1*yp**2*ypp + KMx11*KMx12*KMx21*KMy1*KMy2*KMyph2*VmaxOVERKMx12*x1*yp**3 + KMx11*KMx12*KMx21*KMy1*KMyph1*KMyph2*VmaxOVERKMx12*x1*yp**2*zp + KMx11*KMx12*KMx21*KMy1*KMyph2*VmaxOVERKMx12*x1*yp**3*zp + KMx11*KMx12*KMx21*KMy2*KMyph1*KMyph2*VmaxOVERKMx12*x1*yp**2*z + KMx11*KMx12*KMx21*KMy2*KMyph2*VmaxOVERKMx12*x1*yp**3*z + KMx11*KMx12*KMx22*KMy1*KMy2*KMyph1*KMyph2*VmaxOVERKMx12*x1*y*yp + KMx11*KMx12*KMx22*KMy1*KMy2*KMyph1*VmaxOVERKMx12*x1*y*yp*ypp + KMx11*KMx12*KMx22*KMy1*KMy2*KMyph2*VmaxOVERKMx12*x1*y*yp**2 + KMx11*KMx12*KMx22*KMy1*KMyph1*KMyph2*VmaxOVERKMx12*x1*y*yp*zp + KMx11*KMx12*KMx22*KMy1*KMyph2*VmaxOVERKMx12*x1*y*yp**2*zp + KMx11*KMx12*KMx22*KMy2*KMyph1*KMyph2*VmaxOVERKMx12*x1*y*yp*z + KMx11*KMx12*KMx22*KMy2*KMyph2*VmaxOVERKMx12*x1*y*yp**2*z + KMx11*KMx21*KMx22*KMy1*KMy2*KMyph1*KMyph2*VmaxOVERKMx22*x2*yp**2 + KMx11*KMx21*KMx22*KMy1*KMy2*KMyph1*VmaxOVERKMx22*x2*yp**2*ypp + KMx11*KMx21*KMx22*KMy1*KMy2*KMyph2*VmaxOVERKMx22*x2*yp**3 + KMx11*KMx21*KMx22*KMy1*KMyph1*KMyph2*VmaxOVERKMx22*x2*yp**2*zp + KMx11*KMx21*KMx22*KMy1*KMyph2*VmaxOVERKMx22*x2*yp**3*zp + KMx11*KMx21*KMx22*KMy2*KMyph1*KMyph2*VmaxOVERKMx22*x2*yp**2*z + KMx11*KMx21*KMx22*KMy2*KMyph2*VmaxOVERKMx22*x2*yp**3*z + KMx12*KMx21*KMx22*KMy1*KMy2*KMyph1*KMyph2*VmaxOVERKMx22*x2*y*yp + KMx12*KMx21*KMx22*KMy1*KMy2*KMyph1*VmaxOVERKMx22*x2*y*yp*ypp + KMx12*KMx21*KMx22*KMy1*KMy2*KMyph2*VmaxOVERKMx22*x2*y*yp**2 + KMx12*KMx21*KMx22*KMy1*KMyph1*KMyph2*VmaxOVERKMx22*x2*y*yp*zp + KMx12*KMx21*KMx22*KMy1*KMyph2*VmaxOVERKMx22*x2*y*yp**2*zp + KMx12*KMx21*KMx22*KMy2*KMyph1*KMyph2*VmaxOVERKMx22*x2*y*yp*z + KMx12*KMx21*KMx22*KMy2*KMyph2*VmaxOVERKMx22*x2*y*yp**2*z)/((KMy1*KMy2*KMyph1*ypp + KMyph2*(KMyph1 + yp)*(KMy1*KMy2 + KMy1*zp + KMy2*z))*(KMx11*KMx12 + KMx11*yp + KMx12*y)*(KMx21*KMx22 + KMx21*yp + KMx22*y))) ypp
yppODE_rev: ypp ->((KMx11*KMx12*KMx21*KMx22*KMy1*KMy2*KMyph1*KMyph2*VmaxOVERKMyph2*ypp + KMx11*KMx12*KMx21*KMy1*KMy2*KMyph1*KMyph2*VmaxOVERKMyph2*yp*ypp + KMx11*KMx12*KMx22*KMy1*KMy2*KMyph1*KMyph2*VmaxOVERKMyph2*y*ypp + KMx11*KMx21*KMx22*KMy1*KMy2*KMyph1*KMyph2*VmaxOVERKMyph2*yp*ypp + KMx11*KMx21*KMy1*KMy2*KMyph1*KMyph2*VmaxOVERKMyph2*yp**2*ypp + KMx11*KMx22*KMy1*KMy2*KMyph1*KMyph2*VmaxOVERKMyph2*y*yp*ypp + KMx12*KMx21*KMx22*KMy1*KMy2*KMyph1*KMyph2*VmaxOVERKMyph2*y*ypp + KMx12*KMx21*KMy1*KMy2*KMyph1*KMyph2*VmaxOVERKMyph2*y*yp*ypp + KMx12*KMx22*KMy1*KMy2*KMyph1*KMyph2*VmaxOVERKMyph2*y**2*ypp)/(ypp*(KMy1*KMy2*KMyph1*ypp + KMyph2*(KMyph1 + yp)*(KMy1*KMy2 + KMy1*zp + KMy2*z))*(KMx11*KMx12 + KMx11*yp + KMx12*y)*(KMx21*KMx22 + KMx21*yp + KMx22*y))) 
zODE:  ->((KMy1*KMy2*KMzph1*KMzph2*VmaxOVERKMzph1*eph*zp + KMy1*KMzph1*KMzph2*VmaxOVERKMzph1*eph*zp**2 + KMy2*KMzph1*KMzph2*VmaxOVERKMzph1*eph*z*zp)/((KMy1*KMy2 + KMy1*zp + KMy2*z)*(KMzph1*KMzph2 + KMzph1*zpp + KMzph2*zp))) z
zODE_rev: z ->((KMy1*KMy2*KMzph1*KMzph2*VmaxOVERKMy1*ypp*z + KMy1*KMy2*KMzph1*VmaxOVERKMy1*ypp*z*zpp + KMy1*KMy2*KMzph2*VmaxOVERKMy1*ypp*z*zp)/(z*(KMy1*KMy2 + KMy1*zp + KMy2*z)*(KMzph1*KMzph2 + KMzph1*zpp + KMzph2*zp))) 
zppODE:  ->((KMy1*KMy2*KMzph1*KMzph2*VmaxOVERKMy2*ypp*zp + KMy1*KMy2*KMzph1*VmaxOVERKMy2*ypp*zp*zpp + KMy1*KMy2*KMzph2*VmaxOVERKMy2*ypp*zp**2)/((KMy1*KMy2 + KMy1*zp + KMy2*z)*(KMzph1*KMzph2 + KMzph1*zpp + KMzph2*zp))) zpp
zppODE_rev: zpp ->((KMy1*KMy2*KMzph1*KMzph2*VmaxOVERKMzph2*eph*zpp + KMy1*KMzph1*KMzph2*VmaxOVERKMzph2*eph*zp*zpp + KMy2*KMzph1*KMzph2*VmaxOVERKMzph2*eph*z*zpp)/(zpp*(KMy1*KMy2 + KMy1*zp + KMy2*z)*(KMzph1*KMzph2 + KMzph1*zpp + KMzph2*zp))) 
fGEFODE:  ->((Zf**n*kFBf + kFBf*zpp**n)/(Kf*(Zf**n + zpp**n))) fGEF
fGEFODE_rev: fGEF ->((Kf*fGEF*kFBf*zpp**n + Zf**n*fGEF*kFBf + fGEF*kFBf*zpp**n)/(Kf*fGEF*(Zf**n + zpp**n))) 
wODE:  ->(kdw*zpp) w
wODE_rev: w ->(kdw) 
ephODE:  ->((Kph*kFBph*w**p + Wph**p*kFBph + kFBph*w**p)/(Kph*(Wph**p + w**p))) eph
ephODE_rev: eph ->((Wph**p*eph*kFBph + eph*kFBph*w**p)/(Kph*eph*(Wph**p + w**p))) 
