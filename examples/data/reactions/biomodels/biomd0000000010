J0: MKKK ->(J0_V1*uVol/((J0_K1 + MKKK)*((MAPK_PP/J0_Ki)**J0_n + 1))) MKKK_P
J1: MKKK_P ->(J1_V2*uVol/(J1_KK2 + MKKK_P)) MKKK
J2: MKK ->(J2_k3*MKKK_P*uVol/(J2_KK3 + MKK)) MKK_P
J3: MKK_P ->(J3_k4*MKKK_P*uVol/(J3_KK4 + MKK_P)) MKK_PP
J4: MKK_PP ->(J4_V5*uVol/(J4_KK5 + MKK_PP)) MKK_P
J5: MKK_P ->(J5_V6*uVol/(J5_KK6 + MKK_P)) MKK
J6: MAPK ->(J6_k7*MKK_PP*uVol/(J6_KK7 + MAPK)) MAPK_P
J7: MAPK_P ->(J7_k8*MKK_PP*uVol/(J7_KK8 + MAPK_P)) MAPK_PP
J8: MAPK_PP ->(J8_V9*uVol/(J8_KK9 + MAPK_PP)) MAPK_P
J9: MAPK_P ->(J9_V10*uVol/(J9_KK10 + MAPK_P)) MAPK
