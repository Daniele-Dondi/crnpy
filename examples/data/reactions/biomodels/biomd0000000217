vut1: PII + UTP ->(Kglnut*Kutippi*Kutpiiump*UT*compartment*kcatut/((GLN + Kglnut)*(Kutipii*Kutippi*Kutpiiump*Kututp + Kutipii*Kutippi*Kutpiiump*UTP + Kutippi*Kutpii*Kututp*PIIUMP + Kutippi*Kutpii*Kututp*PIIUMP2 + Kutippi*Kutpii*Kututp*PIIUMP3 + Kutippi*Kutpiiump*Kututp*PII + Kutippi*Kutpiiump*Kututp*PIIUMP + Kutippi*Kutpiiump*Kututp*PIIUMP2 + Kutippi*Kutpiiump*PII*UTP + Kutippi*Kutpiiump*PIIUMP*UTP + Kutippi*Kutpiiump*PIIUMP2*UTP + Kutpiiump*PII*PPi*UTP + Kutpiiump*PIIUMP*PPi*UTP + Kutpiiump*PIIUMP2*PPi*UTP))) PIIUMP + PPi
vut1_rev: PIIUMP + PPi -> PII + UTP
vur1: PIIUMP ->(GLN*Kurump*UR*compartment*kcatur/((GLN + Kglnur)*(Kurpiiump*Kurump + Kurump*PIIUMP + Kurump*PIIUMP2 + Kurump*PIIUMP3 + PIIUMP*UMP + PIIUMP2*UMP + PIIUMP3*UMP))) PII + UMP
vur1_rev: PII + UMP -> PIIUMP
vut2: PIIUMP + UTP ->(Kglnut*Kutippi*Kutpiiump*UT*compartment*kcatut/((GLN + Kglnut)*(Kutipii*Kutippi*Kutpiiump*Kututp + Kutipii*Kutippi*Kutpiiump*UTP + Kutippi*Kutpii*Kututp*PIIUMP + Kutippi*Kutpii*Kututp*PIIUMP2 + Kutippi*Kutpii*Kututp*PIIUMP3 + Kutippi*Kutpiiump*Kututp*PII + Kutippi*Kutpiiump*Kututp*PIIUMP + Kutippi*Kutpiiump*Kututp*PIIUMP2 + Kutippi*Kutpiiump*PII*UTP + Kutippi*Kutpiiump*PIIUMP*UTP + Kutippi*Kutpiiump*PIIUMP2*UTP + Kutpiiump*PII*PPi*UTP + Kutpiiump*PIIUMP*PPi*UTP + Kutpiiump*PIIUMP2*PPi*UTP))) PIIUMP2 + PPi
vut2_rev: PIIUMP2 + PPi -> PIIUMP + UTP
vur2: PIIUMP2 ->(GLN*Kurump*UR*compartment*kcatur/((GLN + Kglnur)*(Kurpiiump*Kurump + Kurump*PIIUMP + Kurump*PIIUMP2 + Kurump*PIIUMP3 + PIIUMP*UMP + PIIUMP2*UMP + PIIUMP3*UMP))) PIIUMP + UMP
vur2_rev: PIIUMP + UMP -> PIIUMP2
vut3: PIIUMP2 + UTP ->(Kglnut*Kutippi*Kutpiiump*UT*compartment*kcatut/((GLN + Kglnut)*(Kutipii*Kutippi*Kutpiiump*Kututp + Kutipii*Kutippi*Kutpiiump*UTP + Kutippi*Kutpii*Kututp*PIIUMP + Kutippi*Kutpii*Kututp*PIIUMP2 + Kutippi*Kutpii*Kututp*PIIUMP3 + Kutippi*Kutpiiump*Kututp*PII + Kutippi*Kutpiiump*Kututp*PIIUMP + Kutippi*Kutpiiump*Kututp*PIIUMP2 + Kutippi*Kutpiiump*PII*UTP + Kutippi*Kutpiiump*PIIUMP*UTP + Kutippi*Kutpiiump*PIIUMP2*UTP + Kutpiiump*PII*PPi*UTP + Kutpiiump*PIIUMP*PPi*UTP + Kutpiiump*PIIUMP2*PPi*UTP))) PIIUMP3 + PPi
vut3_rev: PIIUMP3 + PPi -> PIIUMP2 + UTP
vur3: PIIUMP3 ->(GLN*Kurump*UR*compartment*kcatur/((GLN + Kglnur)*(Kurpiiump*Kurump + Kurump*PIIUMP + Kurump*PIIUMP2 + Kurump*PIIUMP3 + PIIUMP*UMP + PIIUMP2*UMP + PIIUMP3*UMP))) PIIUMP2 + UMP
vur3_rev: PIIUMP2 + UMP -> PIIUMP3
vad: GS ->(Vad*compartment*d1*(GLN*KG**3*Kadpiikg*b1 + 3*GLN*KG**2*Kadpiikg*Kd3*b1 + 3*GLN*KG*Kadpiikg*Kd2*Kd3*b1 + 3*GLN*KG*Kd2*Kd3*PII*c1 + GLN*Kadpiikg*Kd1*Kd2*Kd3*b1 + 3*KG*Kadgln*Kd2*Kd3*PII*a1)/((GS + Kadgs)*(GLN*KG**3*Kadpiikg*d1 + 3*GLN*KG**2*Kadpiikg*Kd3*d1 + 3*GLN*KG*Kadpiikg*Kd2*Kd3*d1 + 3*GLN*KG*Kd2*Kd3*PII + GLN*Kadpiikg*Kd1*Kd2*Kd3*d1 + KG**3*Kadgln*Kadpiikg*d1 + 3*KG**2*Kadgln*Kadpiikg*Kd3*d1 + 3*KG*Kadgln*Kadpiikg*Kd2*Kd3*d1 + 3*KG*Kadgln*Kd2*Kd3*PII*d1 + Kadgln*Kadpiikg*Kd1*Kd2*Kd3*d1))) AMP
vad_rev: AMP -> GS
vdead: AMP ->(Vdead*compartment*l1*m1*n1*o1*(GLN*KG**6*Kdeadpiikg*Kdeadpiiu*f1 + GLN*KG**6*Kdeadpiikg*PIIUMP3*j1 + 3*GLN*KG**5*Kd3*Kdeadpiikg*Kdeadpiiu*f1 + 3*GLN*KG**5*Kd3*Kdeadpiikg*PIIUMP3*j1 + 3*GLN*KG**5*Kd3piiump*Kdeadpiikg*Kdeadpiiu*f1 + 3*GLN*KG**4*Kd2*Kd3*Kdeadpiikg*Kdeadpiiu*f1 + 3*GLN*KG**4*Kd2*Kd3*Kdeadpiikg*PIIUMP3*j1 + 3*GLN*KG**4*Kd2*Kd3*Kdeadpiiu*PII*h1 + 3*GLN*KG**4*Kd2*Kd3*PII*PIIUMP3*k1 + 3*GLN*KG**4*Kd2piiump*Kd3piiump*Kdeadpiikg*Kdeadpiiu*f1 + 9*GLN*KG**4*Kd3*Kd3piiump*Kdeadpiikg*Kdeadpiiu*f1 + GLN*KG**3*Kd1*Kd2*Kd3*Kdeadpiikg*Kdeadpiiu*f1 + GLN*KG**3*Kd1*Kd2*Kd3*Kdeadpiikg*PIIUMP3*j1 + GLN*KG**3*Kd1piiump*Kd2piiump*Kd3piiump*Kdeadpiikg*Kdeadpiiu*f1 + 9*GLN*KG**3*Kd2*Kd3*Kd3piiump*Kdeadpiikg*Kdeadpiiu*f1 + 9*GLN*KG**3*Kd2*Kd3*Kd3piiump*Kdeadpiiu*PII*h1 + 9*GLN*KG**3*Kd2piiump*Kd3*Kd3piiump*Kdeadpiikg*Kdeadpiiu*f1 + 3*GLN*KG**2*Kd1*Kd2*Kd3*Kd3piiump*Kdeadpiikg*Kdeadpiiu*f1 + 3*GLN*KG**2*Kd1piiump*Kd2piiump*Kd3*Kd3piiump*Kdeadpiikg*Kdeadpiiu*f1 + 9*GLN*KG**2*Kd2*Kd2piiump*Kd3*Kd3piiump*Kdeadpiikg*Kdeadpiiu*f1 + 9*GLN*KG**2*Kd2*Kd2piiump*Kd3*Kd3piiump*Kdeadpiiu*PII*h1 + 3*GLN*KG*Kd1*Kd2*Kd2piiump*Kd3*Kd3piiump*Kdeadpiikg*Kdeadpiiu*f1 + 3*GLN*KG*Kd1piiump*Kd2*Kd2piiump*Kd3*Kd3piiump*Kdeadpiikg*Kdeadpiiu*f1 + 3*GLN*KG*Kd1piiump*Kd2*Kd2piiump*Kd3*Kd3piiump*Kdeadpiiu*PII*h1 + GLN*Kd1*Kd1piiump*Kd2*Kd2piiump*Kd3*Kd3piiump*Kdeadpiikg*Kdeadpiiu*f1 + KG**6*Kdeadgln*Kdeadpiikg*PIIUMP3*g1 + 3*KG**5*Kd3*Kdeadgln*Kdeadpiikg*PIIUMP3*g1 + 3*KG**4*Kd2*Kd3*Kdeadgln*Kdeadpiikg*PIIUMP3*g1 + 3*KG**4*Kd2*Kd3*Kdeadgln*Kdeadpiiu*PII*e1 + 3*KG**4*Kd2*Kd3*Kdeadgln*PII*PIIUMP3*i1 + KG**3*Kd1*Kd2*Kd3*Kdeadgln*Kdeadpiikg*PIIUMP3*g1 + 9*KG**3*Kd2*Kd3*Kd3piiump*Kdeadgln*Kdeadpiiu*PII*e1 + 9*KG**2*Kd2*Kd2piiump*Kd3*Kd3piiump*Kdeadgln*Kdeadpiiu*PII*e1 + 3*KG*Kd1piiump*Kd2*Kd2piiump*Kd3*Kd3piiump*Kdeadgln*Kdeadpiiu*PII*e1)/((AMP + Kdeadgsa)*(GLN*KG**6*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + GLN*KG**6*Kdeadpiikg*PIIUMP3*l1*m1*o1 + 3*GLN*KG**5*Kd3*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + 3*GLN*KG**5*Kd3*Kdeadpiikg*PIIUMP3*l1*m1*o1 + 3*GLN*KG**5*Kd3piiump*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + 3*GLN*KG**4*Kd2*Kd3*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + 3*GLN*KG**4*Kd2*Kd3*Kdeadpiikg*PIIUMP3*l1*m1*o1 + 3*GLN*KG**4*Kd2*Kd3*Kdeadpiiu*PII*m1*n1*o1 + 3*GLN*KG**4*Kd2*Kd3*PII*PIIUMP3*l1*m1*n1 + 3*GLN*KG**4*Kd2piiump*Kd3piiump*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + 9*GLN*KG**4*Kd3*Kd3piiump*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + GLN*KG**3*Kd1*Kd2*Kd3*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + GLN*KG**3*Kd1*Kd2*Kd3*Kdeadpiikg*PIIUMP3*l1*m1*o1 + GLN*KG**3*Kd1piiump*Kd2piiump*Kd3piiump*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + 9*GLN*KG**3*Kd2*Kd3*Kd3piiump*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + 9*GLN*KG**3*Kd2*Kd3*Kd3piiump*Kdeadpiiu*PII*m1*n1*o1 + 9*GLN*KG**3*Kd2piiump*Kd3*Kd3piiump*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + 3*GLN*KG**2*Kd1*Kd2*Kd3*Kd3piiump*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + 3*GLN*KG**2*Kd1piiump*Kd2piiump*Kd3*Kd3piiump*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + 9*GLN*KG**2*Kd2*Kd2piiump*Kd3*Kd3piiump*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + 9*GLN*KG**2*Kd2*Kd2piiump*Kd3*Kd3piiump*Kdeadpiiu*PII*m1*n1*o1 + 3*GLN*KG*Kd1*Kd2*Kd2piiump*Kd3*Kd3piiump*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + 3*GLN*KG*Kd1piiump*Kd2*Kd2piiump*Kd3*Kd3piiump*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + 3*GLN*KG*Kd1piiump*Kd2*Kd2piiump*Kd3*Kd3piiump*Kdeadpiiu*PII*m1*n1*o1 + GLN*Kd1*Kd1piiump*Kd2*Kd2piiump*Kd3*Kd3piiump*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + KG**6*Kdeadgln*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + KG**6*Kdeadgln*Kdeadpiikg*PIIUMP3*l1*m1*n1*o1 + 3*KG**5*Kd3*Kdeadgln*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + 3*KG**5*Kd3*Kdeadgln*Kdeadpiikg*PIIUMP3*l1*m1*n1*o1 + 3*KG**5*Kd3piiump*Kdeadgln*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + 3*KG**4*Kd2*Kd3*Kdeadgln*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + 3*KG**4*Kd2*Kd3*Kdeadgln*Kdeadpiikg*PIIUMP3*l1*m1*n1*o1 + 3*KG**4*Kd2*Kd3*Kdeadgln*Kdeadpiiu*PII*l1*m1*n1*o1 + 3*KG**4*Kd2*Kd3*Kdeadgln*PII*PIIUMP3*l1*n1*o1 + 3*KG**4*Kd2piiump*Kd3piiump*Kdeadgln*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + 9*KG**4*Kd3*Kd3piiump*Kdeadgln*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + KG**3*Kd1*Kd2*Kd3*Kdeadgln*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + KG**3*Kd1*Kd2*Kd3*Kdeadgln*Kdeadpiikg*PIIUMP3*l1*m1*n1*o1 + KG**3*Kd1piiump*Kd2piiump*Kd3piiump*Kdeadgln*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + 9*KG**3*Kd2*Kd3*Kd3piiump*Kdeadgln*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + 9*KG**3*Kd2*Kd3*Kd3piiump*Kdeadgln*Kdeadpiiu*PII*l1*m1*n1*o1 + 9*KG**3*Kd2piiump*Kd3*Kd3piiump*Kdeadgln*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + 3*KG**2*Kd1*Kd2*Kd3*Kd3piiump*Kdeadgln*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + 3*KG**2*Kd1piiump*Kd2piiump*Kd3*Kd3piiump*Kdeadgln*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + 9*KG**2*Kd2*Kd2piiump*Kd3*Kd3piiump*Kdeadgln*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + 9*KG**2*Kd2*Kd2piiump*Kd3*Kd3piiump*Kdeadgln*Kdeadpiiu*PII*l1*m1*n1*o1 + 3*KG*Kd1*Kd2*Kd2piiump*Kd3*Kd3piiump*Kdeadgln*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + 3*KG*Kd1piiump*Kd2*Kd2piiump*Kd3*Kd3piiump*Kdeadgln*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1 + 3*KG*Kd1piiump*Kd2*Kd2piiump*Kd3*Kd3piiump*Kdeadgln*Kdeadpiiu*PII*l1*m1*n1*o1 + Kd1*Kd1piiump*Kd2*Kd2piiump*Kd3*Kd3piiump*Kdeadgln*Kdeadpiikg*Kdeadpiiu*l1*m1*n1*o1))) GS
vdead_rev: GS -> AMP
vgdh: KG + NADPH + NH4 ->(Kgdhglu*Kgdhnadp*Vgdh*compartment/((Kgdhnh + NH4)*(GLU*Kgdhkg + KG*Kgdhglu + Kgdhglu*Kgdhkg)*(Kgdhnadp*Kgdhnadph + Kgdhnadp*NADPH + Kgdhnadph*NADP))) GLU + NADP
vgdh_rev: GLU + NADP ->(Kgdhglu*Kgdhnadp*Vgdh*compartment/(Keqgdh*(Kgdhnh + NH4)*(GLU*Kgdhkg + KG*Kgdhglu + Kgdhglu*Kgdhkg)*(Kgdhnadp*Kgdhnadph + Kgdhnadp*NADPH + Kgdhnadph*NADP))) KG + NADPH + NH4
vgog: GLN + KG + NADPH ->(Kgogaz*Kgogglu**2*Kgognadp*Vgog*compartment/((AZGLU + Kgogaz)*(GLN*Kgogglu + GLU*Kgoggln + Kgoggln*Kgogglu)*(GLU*Kgogkg + KG*Kgogglu + Kgogglu*Kgogkg)*(Kgognadp*Kgognadph + Kgognadp*NADPH + Kgognadph*NADP))) 2GLU + NADP
vgog_rev: 2GLU + NADP -> GLN + KG + NADPH
vgs: ATP + GLU + NH4 ->(Kgsadp*Kgsgln*Kgspi*Vgs*aamp*camp*compartment/((Kgsnh + NH4)*(12**n1amp*(AMP/(GStot*bamp))**n1amp + 1)*(12**n2amp*(AMP/(GStot*damp))**n2amp + 1)*(GLN*Kgsglu + GLU*Kgsgln + Kgsgln*Kgsglu)*(ADP*Kgsatp*Kgspi + ADP*Kgsatp*P_i + ATP*Kgsadp*Kgspi + Kgsadp*Kgsatp*Kgspi + Kgsadp*Kgsatp*P_i))) ADP + GLN + P_i
vgs_rev: ADP + GLN + P_i ->(Kgsadp*Kgsgln*Kgspi*Vgs*aamp*camp*compartment/(Keq*(Kgsnh + NH4)*(12**n1amp*(AMP/(GStot*bamp))**n1amp + 1)*(12**n2amp*(AMP/(GStot*damp))**n2amp + 1)*(GLN*Kgsglu + GLU*Kgsgln + Kgsgln*Kgsglu)*(ADP*Kgsatp*Kgspi + ADP*Kgsatp*P_i + ATP*Kgsadp*Kgspi + Kgsadp*Kgsatp*Kgspi + Kgsadp*Kgsatp*P_i))) ATP + GLU + NH4
vgludem: GLU ->(Kgludemazglu*Vgludem*compartment/(AZGLU*Kgludemglu + GLU*Kgludemazglu + Kgludemazglu*Kgludemglu)) AZGLU
vgludem_rev: AZGLU ->(Kgludemazglu*Vgludem*compartment/(Kgludemeq*(AZGLU*Kgludemglu + GLU*Kgludemazglu + Kgludemazglu*Kgludemglu))) GLU
vazgludem: AZGLU ->(Kazgludemazinter*Vazgludem*compartment/(AZGLU*Kazgludemazinter + AZglu*Kazgludemazglu + Kazgludemazglu*Kazgludemazinter)) AZglu
vazgludem_rev: AZglu ->(Kazgludemazinter*Vazgludem*compartment/(Kazgludemeq*(AZGLU*Kazgludemazinter + AZglu*Kazgludemazglu + Kazgludemazglu*Kazgludemazinter))) AZGLU
vglndem: GLN ->(Kglndemazgln*Vglndem*compartment/(AZGLN*Kglndemgln + GLN*Kglndemazgln + Kglndemazgln*Kglndemgln)) AZGLN
vglndem_rev: AZGLN ->(Kglndemazgln*Vglndem*compartment/(Kglndemeq*(AZGLN*Kglndemgln + GLN*Kglndemazgln + Kglndemazgln*Kglndemgln))) GLN
vazglndem: AZGLN ->(Kazglndemazinter*Vazglndem*compartment/(AZGLN*Kazglndemazinter + AZgln*Kazglndemazgln + Kazglndemazgln*Kazglndemazinter)) AZgln
vazglndem_rev: AZgln ->(Kazglndemazinter*Vazglndem*compartment/(Kazglndemeq*(AZGLN*Kazglndemazinter + AZgln*Kazglndemazgln + Kazglndemazgln*Kazglndemazinter))) AZGLN
vatpase: ADP ->(Vadp*compartment/(ADP + Kadp)) ATP
vatpase_rev: ATP -> ADP
