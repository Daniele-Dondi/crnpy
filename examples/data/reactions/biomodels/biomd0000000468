re3: s4 ->((-k6*s3*(B_T - s4) + k7*s4)/s4) s3
re4: s5 ->(k_CCE*(s1 - s2)*(Cao*fracK/(Cao + K3) - s2)/s5) s2
re5: s7 ->(0.5*k1*s3*(-R_T*half*(exp(-s12/tau_II) + exp(-s12/tau_I) + (tau_I + tau_II)*(-exp(-s12/tau_II) + exp(-s12/tau_I))/(tau_I - tau_II)) + R_T)/(s7*(K1 + s3))) s6
re6: s6 ->(0.5*k2) s8
re7: s2 ->((0.5*k3*k_CICR*s2*s3*s6**3/((K2 + s6)**3*(K_CICR + s3)) - 0.5*k4*s3**2/(K3 + s3)**2 + 0.5*k5*s2**2)/s2) s3
re8: s3 ->(0.5*dot_Vhi*s3**3/(K_hi**4 + s3**4)) s9
re9: s3 ->(0.5*dot_Vex/(K5 + s3)) s10
re10: s11 ->(0.5*dot_q_inpass/s11) s3
re11: s13 ->(0.5*re11_unisec/s13) s12
re12: s3 ->(0.5*dot_Vp*s3/(K4**2 + s3**2)) s9
re37: s47 + s51 ->(k15) s45
re38: s48 + s51 ->(k17) s50
re38_rev: s50 ->(k18) s48 + s51
re41: s52 ->(k11*s3) s48
re41_rev: s48 ->(k12) s52
re42: s48 ->((k13*s3*s48 - k14*s47)/s48) s47
re50: s45 ->(gam*k14) s50
re50_rev: s50 ->(k13*s3) s45
re51: s45 + s57 ->(k90) s58
re52: s58 ->(gam*k14) s61
re52_rev: s61 ->(k13*s3) s58
re53: s61 ->(kr90) s50 + s57
re54: s60 ->(gam*k14) s62
re54_rev: s62 ->(k13*s3) s60
re55: s58 ->(kp*s27/(Kmp + s58)) s60
re55_rev: s60 ->(Vdp/(Kmdp + s60)) s58
re56: s61 ->(kp*s27/(Kmp + s61)) s62
re56_rev: s62 ->(Vdp/(Kmdp + s62)) s61
re57: s22 ->(re57_normal*re57_unity*(s23/re57_unimol)**0.8*exp(re57_unity)*exp(-(s23/re57_tf)**1.8)/s22) s20
re57_rev: s20 ->(re57_normal*(s23/re57_tf)**1.8*(s23/re57_unimol)**0.8*exp(re57_unity)*exp(-(s23/re57_tf)**1.8)/s20) s22
re58: s19 ->(re58_k58*s20/(re58_Km58 + s19)) s17
re59: s17 ->(re59_k59*s18/(re59_Km59 + s17)) s19
re60: s16 + s17 ->(re60_k60) s28
re60_rev: s28 ->(re60_kr60) s16 + s17
re61: s28 ->(re61_k61*s14/(re61_Km61 + s28)) s26
re62: s26 ->(re62_k62*s24/(re62_Km62 + s26)) s27
re63: s26 ->(re63_k63*s15/(re63_Km63 + s26)) s28
re64: s27 ->(re64_k64*s15/(re64_Km64 + s27)) s26
re65: s27 ->(re65_k65*s15/(re65_Km65 + s27)) s16 + s17
re66: s25 ->(re66_k66*s17) s14
re67: s14 ->(re67_k67) s25
re68: s21 ->(re68_unitime/s21) s23
re69: s63 ->((re69_K_cam_no*(s45 + s58) + re69_K_p_no*(s62 + s65) + re69_K_pcam_no*s60)/s63) s64
re70: s65 ->(Vdp/(Kmdp + s65)) s66
re71: s66 ->(kr90) s51 + s57
re72: s62 ->(k18) s48 + s65
re72_rev: s48 + s65 ->(k17) s62
re102: s95 ->(re102_normal*re102_unity*((re102_tiny_num + s39)/re102_unimol)**(-0.65)*exp(re102_unity)*exp(-(s39/re102_tf)**0.35)/s95) s93
re102_rev: s93 ->(re102_normal*(s39/re102_tf)**0.35*((re102_tiny_num + s39)/re102_unimol)**(-0.65)*exp(re102_unity)*exp(-(s39/re102_tf)**0.35)/s93) s95
re103: s94 ->(re103_normal*re103_unity*(s39/re103_unimol)**0.3*exp(re103_unity)*exp(-(s39/re103_tf)**1.3)/s94) s92
re103_rev: s92 ->(re103_normal*(s39/re103_tf)**1.3*(s39/re103_unimol)**0.3*exp(re103_unity)*exp(-(s39/re103_tf)**1.3)/s92) s94
re104: s91 + s93 ->(re104_k105) s110
re104_rev: s110 ->(re104_k_105) s91 + s93
re105: s110 ->(re105_kcat_src*s92) s112
re105_rev: s112 ->(re105_k_6) s110
re106: s111 + s112 ->(re106_k107) s113
re106_rev: s113 ->(re106_k_107) s111 + s112
re107: s113 ->(re107_k108) s114 + s93
re107_rev: s114 + s93 ->(re107_k_108) s113
re108: s98 ->(re108_V10/(re108_K10 + s98)) s91
re109: s114 ->(re109_k9) s111 + s98
re110: s115 ->(re110_kT) s106
re111: s108 ->((re111_ktr1*s107 + re111_ktr1k2*s49)/s108) s115
re112: s103 ->(re112_k111*s114/(re112_K111 + s103)) s102
re113: s102 ->(re113_V12/(re113_K12 + s102)) s103
re114: s97 ->(re114_k113*s102/(re114_K113 + s97)) s101
re115: s101 ->(re115_V18/(re115_K18 + s101)) s97
re116: s96 ->(re116_k19*s101/(re116_K19 + s96)) s100
re117: s100 ->(re117_V20/(re117_K20 + s100)) s96
re118: s99 ->(re118_k21*s43/(re118_K21 + s99)) s104
re119: s104 ->(re119_V22/(re119_K22 + s104)) s99
re120: s106 ->(re120_kD) s35
re121: s37 ->(re121_kP*s106/(s37*(re121_K30 + s106))) s51
re122: s38 ->(re122_unitime/s38) s39
re123: s43 ->(re123_V37/(re123_K37 + s43)) s100
re124: s100 ->(re124_k38*s101/(re124_K38 + s100)) s43
re125: s44 ->(re125_V39/(re125_K39 + s44)) s104
re126: s104 ->(re126_k40*s43/(re126_K40 + s104)) s44
re127: s42 ->(re127_k43*s44/(re127_K43 + s42)) s107
re128: s107 ->(re128_V44/(re128_K44 + s107)) s42
re129: s105 ->(29.256*exp(re129_tau*(re129_delay - s39/re129_tc))/(re129_uc*s105*(exp(2*re129_tau*(re129_delay - s39/re129_tc)) + 2*exp(re129_tau*(re129_delay - s39/re129_tc)) + 1))) s49
re131: s51 ->(kDD) s116
re132: s45 ->(kDD) s117 + s47
re133: s50 ->(kDD) s117 + s48
re134: s66 ->(kDD) s118 + s57
re135: s65 ->(kDD) s118 + s57
re136: s61 ->(kDD) s48 + s57
re137: s62 ->(kDD) s48 + s57
re138: s58 ->(kDD) s47 + s57
re139: s60 ->(kDD) s47 + s57
