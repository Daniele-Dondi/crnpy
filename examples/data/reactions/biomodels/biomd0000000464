re3: s4 ->((-k6*s3*(B_T - s4) + k7*s4)/s4) s3
re4: s5 ->(k_CCE*(s1 - s2)*(Cao*fracK/(Cao + K3) - s2)/s5) s2
re5: s7 ->(k1*s3*(-R_T*half*(exp(-s12/tau_II) + exp(-s12/tau_I) + (tau_I + tau_II)*(-exp(-s12/tau_II) + exp(-s12/tau_I))/(tau_I - tau_II)) + R_T)/(s7*(K1 + s3))) s6
re6: s6 ->(k2) s8
re7: s2 ->((k3*k_CICR*s2*s3*s6**3/((K2 + s6)**3*(K_CICR + s3)) - k4*s3**2/(K3 + s3)**2 + k5*s2**2)/s2) s3
re8: s3 ->(dot_Vhi*s3**3/(K_hi**4 + s3**4)) s9
re9: s3 ->(dot_Vex/(K5 + s3)) s10
re10: s11 ->(dot_q_inpass/s11) s3
re11: s13 ->(re11_unisec/s13) s12
re12: s3 ->(dot_Vp*s3/(K4**2 + s3**2)) s9
