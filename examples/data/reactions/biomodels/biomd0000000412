cL_m_trscr: s1 ->(1.0*_def*(0.5*cP*g1**a*lightAmplitude*q1*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) + 0.5*cP*g1**a*lightAmplitude*q1*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod - cyclePeriod/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) - 0.5*cP*g1**a*lightAmplitude*q1*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod - photoPeriod/twilightPeriod + time/twilightPeriod) + 0.5*cP*g1**a*lightAmplitude*q1 + 1.0*cP*g1**a*lightOffset*q1 + 0.5*cP*lightAmplitude*q1*(cNI + cP7 + cP9 + cT)**a*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) + 0.5*cP*lightAmplitude*q1*(cNI + cP7 + cP9 + cT)**a*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod - cyclePeriod/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) - 0.5*cP*lightAmplitude*q1*(cNI + cP7 + cP9 + cT)**a*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod - photoPeriod/twilightPeriod + time/twilightPeriod) + 0.5*cP*lightAmplitude*q1*(cNI + cP7 + cP9 + cT)**a + 1.0*cP*lightOffset*q1*(cNI + cP7 + cP9 + cT)**a + 1.0*g1**a*n1)/(s1*(g1**a + (cNI + cP7 + cP9 + cT)**a))) cL_m
cL_m_degr: cL_m ->(1.0*_def*(0.5*lightAmplitude*m1*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) + 0.5*lightAmplitude*m1*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod - cyclePeriod/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) - 0.5*lightAmplitude*m1*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod - photoPeriod/twilightPeriod + time/twilightPeriod) + 0.5*lightAmplitude*m1 - 0.5*lightAmplitude*m2*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) - 0.5*lightAmplitude*m2*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod - cyclePeriod/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) + 0.5*lightAmplitude*m2*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod - photoPeriod/twilightPeriod + time/twilightPeriod) - 0.5*lightAmplitude*m2 + 1.0*lightOffset*m1 - 1.0*lightOffset*m2 + 1.0*m2)) s2
cL_trsl: s3 ->(1.0*_def*cL_m*(0.5*lightAmplitude*p1*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) + 0.5*lightAmplitude*p1*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod - cyclePeriod/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) - 0.5*lightAmplitude*p1*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod - photoPeriod/twilightPeriod + time/twilightPeriod) + 0.5*lightAmplitude*p1 + 1.0*lightOffset*p1 + 1.0*p2)/s3) cL
cL_degr: cL ->((cL*cL**c*m3 + cL*g3**c*m3 + cL**c*p3)/(cL*(cL**c + g3**c))) s4
cL_modif: s5 ->(cL**c*p3/(s5*(cL**c + g3**c))) cLm
cLm_degr: cLm ->(m4) s6
cP_trsl: s7 ->(1.0*_def*p7*(cP - 1)*(0.5*lightAmplitude*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) + 0.5*lightAmplitude*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod - cyclePeriod/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) - 0.5*lightAmplitude*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod - photoPeriod/twilightPeriod + time/twilightPeriod) + 0.5*lightAmplitude + 1.0*lightOffset - 1.0)/s7) cP
cP_degr: cP ->(1.0*_def*m11*(0.5*lightAmplitude*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) + 0.5*lightAmplitude*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod - cyclePeriod/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) - 0.5*lightAmplitude*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod - photoPeriod/twilightPeriod + time/twilightPeriod) + 0.5*lightAmplitude + 1.0*lightOffset)) s8
cP9_m_trscr: s9 ->(1.0*_def*(0.5*cEC*cL**e*cP*lightAmplitude*q3*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) + 0.5*cEC*cL**e*cP*lightAmplitude*q3*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod - cyclePeriod/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) - 0.5*cEC*cL**e*cP*lightAmplitude*q3*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod - photoPeriod/twilightPeriod + time/twilightPeriod) + 0.5*cEC*cL**e*cP*lightAmplitude*q3 + 1.0*cEC*cL**e*cP*lightOffset*q3 + 0.5*cEC*cP*g9**e*lightAmplitude*q3*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) + 0.5*cEC*cP*g9**e*lightAmplitude*q3*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod - cyclePeriod/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) - 0.5*cEC*cP*g9**e*lightAmplitude*q3*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod - photoPeriod/twilightPeriod + time/twilightPeriod) + 0.5*cEC*cP*g9**e*lightAmplitude*q3 + 1.0*cEC*cP*g9**e*lightOffset*q3 + 0.5*cL**e*cP*g8*lightAmplitude*q3*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) + 0.5*cL**e*cP*g8*lightAmplitude*q3*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod - cyclePeriod/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) - 0.5*cL**e*cP*g8*lightAmplitude*q3*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod - photoPeriod/twilightPeriod + time/twilightPeriod) + 0.5*cL**e*cP*g8*lightAmplitude*q3 + 1.0*cL**e*cP*g8*lightOffset*q3 + 1.0*cL**e*g8*n4 + 1.0*cL**e*g8*n7 + 0.5*cP*g8*g9**e*lightAmplitude*q3*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) + 0.5*cP*g8*g9**e*lightAmplitude*q3*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod - cyclePeriod/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) - 0.5*cP*g8*g9**e*lightAmplitude*q3*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod - photoPeriod/twilightPeriod + time/twilightPeriod) + 0.5*cP*g8*g9**e*lightAmplitude*q3 + 1.0*cP*g8*g9**e*lightOffset*q3 + 1.0*g8*g9**e*n4)/(s9*(cEC + g8)*(cL**e + g9**e))) cP9_m
cP9_m_degr: cP9_m ->(m12) s10
cP9_trsl: s11 ->(cP9_m*p8/s11) cP9
cP9_degr: cP9 ->(1.0*_def*(-0.5*lightAmplitude*m22*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) - 0.5*lightAmplitude*m22*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod - cyclePeriod/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) + 0.5*lightAmplitude*m22*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod - photoPeriod/twilightPeriod + time/twilightPeriod) - 0.5*lightAmplitude*m22 - 1.0*lightOffset*m22 + 1.0*m13 + 1.0*m22)) s12
cP7_m_trscr: s13 ->((cP9**f*g10**e*n9 + cP9**f*n8*(cL + cLm)**e + cP9**f*n9*(cL + cLm)**e + g11**f*n8*(cL + cLm)**e)/(s13*(cP9**f + g11**f)*(g10**e + (cL + cLm)**e))) cP7_m
cP7_m_degr: cP7_m ->(m14) s14
cP7_trsl: s15 ->(cP7_m*p9/s15) cP7
cP7_degr: cP7 ->(1.0*_def*(-0.5*lightAmplitude*m23*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) - 0.5*lightAmplitude*m23*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod - cyclePeriod/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) + 0.5*lightAmplitude*m23*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod - photoPeriod/twilightPeriod + time/twilightPeriod) - 0.5*lightAmplitude*m23 - 1.0*lightOffset*m23 + 1.0*m15 + 1.0*m23)) s16
cNI_m_trscr: s17 ->((cLm**e*cP7**b*n10 + cLm**e*cP7**b*n11 + cLm**e*g13**b*n10 + cP7**b*g12**e*n11)/(s17*(cLm**e + g12**e)*(cP7**b + g13**b))) cNI_m
cNI_m_degr: cNI_m ->(m16) s18
cNI_trsl: s19 ->(cNI_m*p10/s19) cNI
cNI_degr: cNI ->(1.0*_def*(-0.5*lightAmplitude*m24*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) - 0.5*lightAmplitude*m24*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod - cyclePeriod/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) + 0.5*lightAmplitude*m24*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod - photoPeriod/twilightPeriod + time/twilightPeriod) - 0.5*lightAmplitude*m24 - 1.0*lightOffset*m24 + 1.0*m17 + 1.0*m24)) s20
cT_m_trscr: s21 ->(g4*g5**e*n2/(s21*(cEC + g4)*(cL**e + g5**e))) cT_m
cT_m_degr: cT_m ->(m5) s22
cT_trsl: s23 ->(cT_m*p4/s23) cT
cT_degr: cT ->(1.0*_def*(-0.5*cZG*lightAmplitude*m7*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) - 0.5*cZG*lightAmplitude*m7*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod - cyclePeriod/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) + 0.5*cZG*lightAmplitude*m7*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod - photoPeriod/twilightPeriod + time/twilightPeriod) - 0.5*cZG*lightAmplitude*m7 - 1.0*cZG*lightOffset*m7 + 1.0*cZG*m6 + 1.0*cZG*m7 - 0.5*cZTL*lightAmplitude*m7*p5*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) - 0.5*cZTL*lightAmplitude*m7*p5*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod - cyclePeriod/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) + 0.5*cZTL*lightAmplitude*m7*p5*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod - photoPeriod/twilightPeriod + time/twilightPeriod) - 0.5*cZTL*lightAmplitude*m7*p5 - 1.0*cZTL*lightOffset*m7*p5 + 1.0*cZTL*m6*p5 + 1.0*cZTL*m7*p5 + 1.0*m8)) s24
cE4_m_trscr: s25 ->(g2*g6**e*n13/(s25*(cEC + g2)*(cL**e + g6**e))) cE4_m
cE4_m_degr: cE4_m ->(m34) s26
cE4_trsl: s27 ->(cE4_m*p23/s27) cE4
cE4_degr: cE4 ->((cCOP1d*cE3n*m37*p25 + cCOP1d*m35*m37 + cCOP1n*cE3n*m36*p25 + cCOP1n*m35*m36 + cE3n*cLUX*p25*p26 + cLUX*m35*p26 + m35*p21)/(cCOP1d*m37 + cCOP1n*m36 + cLUX*p26 + p21)) s28
cE3_m_trscr: s29 ->(g16**e*n3/(s29*(cL**e + g16**e))) cE3_m
cE3_m_degr: cE3_m ->(m26) s30
cE3_trsl: s31 ->(cE3_m*p16/s31) cE3
cE3_degr: cE3 ->(cCOP1c*m9) s32
cE3n_import: cE3 ->((cE3*p19 - cE3n*p20)/cE3) cE3n
cE3n_degr: cE3n ->((cCOP1d**2*cE3n*m30*m37*p17 + cCOP1d**2*m19*m30*m37 + cCOP1d**2*m30*m37*p29 + cCOP1d*cCOP1n*cE3n*m29*m37*p17 + cCOP1d*cCOP1n*cE3n*m30*m36*p17 + cCOP1d*cCOP1n*m19*m29*m37 + cCOP1d*cCOP1n*m19*m30*m36 + cCOP1d*cCOP1n*m29*m37*p29 + cCOP1d*cCOP1n*m30*m36*p29 + cCOP1d*cE3n*cE4*m37*p17*p25 + cCOP1d*cE3n*cLUX*m30*p17*p26 + cCOP1d*cE3n*m30*p17*p21 + cCOP1d*cE4*m19*m37*p25 + cCOP1d*cE4*m37*p25*p29 + cCOP1d*cG*m37*p17*p28 + cCOP1d*cLUX*m19*m30*p26 + cCOP1d*cLUX*m30*p26*p29 + cCOP1d*m19*m30*p21 + cCOP1d*m30*p21*p29 + cCOP1n**2*cE3n*m29*m36*p17 + cCOP1n**2*m19*m29*m36 + cCOP1n**2*m29*m36*p29 + cCOP1n*cE3n*cE4*m36*p17*p25 + cCOP1n*cE3n*cLUX*m29*p17*p26 + cCOP1n*cE3n*m29*p17*p21 + cCOP1n*cE4*m19*m36*p25 + cCOP1n*cE4*m36*p25*p29 + cCOP1n*cG*m36*p17*p28 + cCOP1n*cLUX*m19*m29*p26 + cCOP1n*cLUX*m29*p26*p29 + cCOP1n*m19*m29*p21 + cCOP1n*m29*p21*p29 + cE3n*cE4*cLUX*p17*p25*p26 + cE4*cLUX*m19*p25*p26 + cE4*cLUX*p25*p26*p29 + cG*cLUX*p17*p26*p28 + cG*p17*p21*p28)/((cE3n*p17 + m19 + p29)*(cCOP1d*m37 + cCOP1n*m36 + cLUX*p26 + p21))) s33
cLUX_m_trscr: s34 ->(g2*g6**e*n13/(s34*(cEC + g2)*(cL**e + g6**e))) cLUX_m
cLUX_m_degr: cLUX_m ->(m34) s35
cLUX_trsl: s36 ->(cLUX_m*p27/s36) cLUX
cLUX_degr: cLUX ->((cCOP1d*m37*m39 + cCOP1n*m36*m39 + cE3n*cE4*p25*p26 + cLUX*m39*p26 + m39*p21)/(cCOP1d*m37 + cCOP1n*m36 + cLUX*p26 + p21)) s37
cCOP1c_trsl: s38 ->(n5/s38) cCOP1c
cCOP1c_degr: cCOP1c ->(-1.0*_def*m27*(0.5*lightAmplitude*p15*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) + 0.5*lightAmplitude*p15*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod - cyclePeriod/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) - 0.5*lightAmplitude*p15*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod - photoPeriod/twilightPeriod + time/twilightPeriod) + 0.5*lightAmplitude*p15 + 1.0*lightOffset*p15 - 1.0*p15 - 1.0)) s39
cCOP1n_import: cCOP1c ->(p6) cCOP1n
cCOP1n_degr: cCOP1n ->(1.0*_def*m27*(0.5*lightAmplitude*p15*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) + 0.5*lightAmplitude*p15*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod - cyclePeriod/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) - 0.5*lightAmplitude*p15*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod - photoPeriod/twilightPeriod + time/twilightPeriod) + 0.5*lightAmplitude*p15 + 1.0*lightOffset*p15 + 1.0)) s40
cCOP1d_activ: cCOP1n ->(1.0*_def*(0.5*cP*lightAmplitude*n6*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) + 0.5*cP*lightAmplitude*n6*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod - cyclePeriod/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) - 0.5*cP*lightAmplitude*n6*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod - photoPeriod/twilightPeriod + time/twilightPeriod) + 0.5*cP*lightAmplitude*n6 + 1.0*cP*lightOffset*n6 + 1.0*n14)) cCOP1d
cCOP1d_degr: cCOP1d ->(-1.0*_def*m31*(0.5*lightAmplitude*m33*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) + 0.5*lightAmplitude*m33*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod - cyclePeriod/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) - 0.5*lightAmplitude*m33*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod - photoPeriod/twilightPeriod + time/twilightPeriod) + 0.5*lightAmplitude*m33 + 1.0*lightOffset*m33 - 1.0*m33 - 1.0)) s41
cG_m_trscr: s42 ->(1.0*_def*(0.5*cEC*cL**e*cP*lightAmplitude*q2*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) + 0.5*cEC*cL**e*cP*lightAmplitude*q2*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod - cyclePeriod/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) - 0.5*cEC*cL**e*cP*lightAmplitude*q2*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod - photoPeriod/twilightPeriod + time/twilightPeriod) + 0.5*cEC*cL**e*cP*lightAmplitude*q2 + 1.0*cEC*cL**e*cP*lightOffset*q2 + 0.5*cEC*cP*g15**e*lightAmplitude*q2*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) + 0.5*cEC*cP*g15**e*lightAmplitude*q2*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod - cyclePeriod/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) - 0.5*cEC*cP*g15**e*lightAmplitude*q2*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod - photoPeriod/twilightPeriod + time/twilightPeriod) + 0.5*cEC*cP*g15**e*lightAmplitude*q2 + 1.0*cEC*cP*g15**e*lightOffset*q2 + 0.5*cL**e*cP*g14*lightAmplitude*q2*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) + 0.5*cL**e*cP*g14*lightAmplitude*q2*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod - cyclePeriod/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) - 0.5*cL**e*cP*g14*lightAmplitude*q2*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod - photoPeriod/twilightPeriod + time/twilightPeriod) + 0.5*cL**e*cP*g14*lightAmplitude*q2 + 1.0*cL**e*cP*g14*lightOffset*q2 + 0.5*cP*g14*g15**e*lightAmplitude*q2*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) + 0.5*cP*g14*g15**e*lightAmplitude*q2*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod - cyclePeriod/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) - 0.5*cP*g14*g15**e*lightAmplitude*q2*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod - photoPeriod/twilightPeriod + time/twilightPeriod) + 0.5*cP*g14*g15**e*lightAmplitude*q2 + 1.0*cP*g14*g15**e*lightOffset*q2 + 1.0*g14*g15**e*n12)/(s42*(cEC + g14)*(cL**e + g15**e))) cG_m
cG_m_degr: cG_m ->(m18) s43
cG_trsl: s44 ->(cG_m*p11/s44) cG
cG_degr: cG ->((cE3n*m19*p17 + cE3n*p17*p28 + m19**2 + m19*p28 + m19*p29)/(cE3n*p17 + m19 + p29)) s45
cG_cZTL_assoc: cG + cZTL ->(1.0*_def*(0.5*cG*cZTL*p12 + 0.5*cZG*p13)*(0.5*lightAmplitude*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) + 0.5*lightAmplitude*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod - cyclePeriod/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) + 0.5*lightAmplitude + 1.0*lightOffset)/(cG*cZTL)) cZG
cG_cZTL_assoc_rev: cZG ->(1.0*_def*(0.5*cG*cZTL*lightAmplitude*p12*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod - photoPeriod/twilightPeriod + time/twilightPeriod) + 0.5*cZG*lightAmplitude*p13*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod - photoPeriod/twilightPeriod + time/twilightPeriod) + 1.0*cZG*p13)/cZG) cG + cZTL
cZTL_trsl: s46 ->(p14/s46) cZTL
cZTL_degr: cZTL ->(m20) s47
cZG_degr: cZG ->(m21) s48
cG_cE3_assoc: cE3 + cG ->(p17) cEG
cEG_degr: cEG ->((cCOP1c*cCOP1d*cE3n*cEG*m10*m9*p17 + cCOP1c*cCOP1d*cEG*m10*m19*m9 + cCOP1c*cCOP1d*cEG*m10*m9*p29 + cCOP1c*cCOP1n*cE3n*cEG*m9**2*p17 + cCOP1c*cCOP1n*cEG*m19*m9**2 + cCOP1c*cCOP1n*cEG*m9**2*p29 + cCOP1c*cE3n*cEG*m9*p17*p31 + cCOP1c*cEG*m19*m9*p31 + cCOP1c*cEG*m9*p29*p31 + cCOP1d*cE3n*cEG*m10*p17*p18 + cCOP1d*cEG*m10*m19*p18 + cCOP1d*cEG*m10*p18*p29 + cCOP1n*cE3n*cEG*m9*p17*p18 + cCOP1n*cEG*m19*m9*p18 + cCOP1n*cEG*m9*p18*p29 - cE3n*cG*p17*p28*p31)/(cEG*(cCOP1d*m10 + cCOP1n*m9 + p31)*(cE3n*p17 + m19 + p29))) s49
cEC_form: s50 ->(cE3n*cE4*cLUX*p25*p26/(s50*(cCOP1d*m37 + cCOP1n*m36 + cLUX*p26 + p21))) cEC
cEC_degr: cEC ->(1.0*_def*(1.0*cCOP1d*g7**d*m37 + 1.0*cCOP1d*m37*(cCOP1d*cG*m10*p28/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cCOP1n*cG*m9*p28/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cE3n*cEG*p17*p18/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cE3n*cG*p17*p28/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cEG*m19*p18/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cEG*p18*p29/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cG*p28*p31/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31))**d + 1.0*cCOP1n*g7**d*m36 + 1.0*cCOP1n*m36*(cCOP1d*cG*m10*p28/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cCOP1n*cG*m9*p28/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cE3n*cEG*p17*p18/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cE3n*cG*p17*p28/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cEG*m19*p18/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cEG*p18*p29/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cG*p28*p31/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31))**d + 1.0*g7**d*m32 + 0.5*lightAmplitude*m32*p24*(cCOP1d*cG*m10*p28/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cCOP1n*cG*m9*p28/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cE3n*cEG*p17*p18/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cE3n*cG*p17*p28/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cEG*m19*p18/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cEG*p18*p29/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cG*p28*p31/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31))**d*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) + 0.5*lightAmplitude*m32*p24*(cCOP1d*cG*m10*p28/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cCOP1n*cG*m9*p28/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cE3n*cEG*p17*p18/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cE3n*cG*p17*p28/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cEG*m19*p18/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cEG*p18*p29/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cG*p28*p31/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31))**d*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod - cyclePeriod/twilightPeriod + phase/twilightPeriod + time/twilightPeriod) - 0.5*lightAmplitude*m32*p24*(cCOP1d*cG*m10*p28/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cCOP1n*cG*m9*p28/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cE3n*cEG*p17*p18/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cE3n*cG*p17*p28/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cEG*m19*p18/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cEG*p18*p29/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cG*p28*p31/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31))**d*tanh(-cyclePeriod*floor(floor(phase + time)/cyclePeriod)/twilightPeriod + phase/twilightPeriod - photoPeriod/twilightPeriod + time/twilightPeriod) + 0.5*lightAmplitude*m32*p24*(cCOP1d*cG*m10*p28/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cCOP1n*cG*m9*p28/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cE3n*cEG*p17*p18/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cE3n*cG*p17*p28/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cEG*m19*p18/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cEG*p18*p29/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cG*p28*p31/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31))**d + 1.0*lightOffset*m32*p24*(cCOP1d*cG*m10*p28/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cCOP1n*cG*m9*p28/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cE3n*cEG*p17*p18/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cE3n*cG*p17*p28/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cEG*m19*p18/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cEG*p18*p29/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cG*p28*p31/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31))**d + 1.0*m32*(cCOP1d*cG*m10*p28/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cCOP1n*cG*m9*p28/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cE3n*cEG*p17*p18/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cE3n*cG*p17*p28/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cEG*m19*p18/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cEG*p18*p29/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cG*p28*p31/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31))**d)/(g7**d + (cCOP1d*cG*m10*p28/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cCOP1n*cG*m9*p28/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cE3n*cEG*p17*p18/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cE3n*cG*p17*p28/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cEG*m19*p18/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cEG*p18*p29/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31) + cG*p28*p31/(cCOP1d*cE3n*m10*p17 + cCOP1d*m10*m19 + cCOP1d*m10*p29 + cCOP1n*cE3n*m9*p17 + cCOP1n*m19*m9 + cCOP1n*m9*p29 + cE3n*p17*p31 + m19*p31 + p29*p31))**d)) s51
